package fis.topic03.exercise02;

import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

public class ChatServer {
	private int port;
    private Set<String> userNames = new HashSet<>();
    private Set<UserThread> userThreads = new HashSet<>();
    private List<CauHoi> listCauHoi=new ArrayList<CauHoi>();
 
    public ChatServer(int port) {
        this.port = port;
    }
 
    public void execute() {
        try (ServerSocket serverSocket = new ServerSocket(port)) {
 
            System.out.println("Chat Server is listening on port " + port);
 
            while (true) {
                Socket socket = serverSocket.accept();
                System.out.println("New user connected"); 
                UserThread newUser = new UserThread(socket, this);
                userThreads.add(newUser);
                newUser.start();
            }
        } catch (IOException ex) {
            System.out.println("Error in the server: " + ex.getMessage());
            ex.printStackTrace();
        }
    }
 
    
    void addUserName(String userName) {
        userNames.add(userName);
    }
 
    void removeUser(String userName, UserThread aUser) {
        boolean removed = userNames.remove(userName);
        if (removed) {
            userThreads.remove(aUser);
            System.out.println("The user " + userName + " quitted");
        }
    }
 
    Set<String> getUserNames() {
        return this.userNames;
    }
 
    boolean hasUsers() {
        return !this.userNames.isEmpty();
    }
    public List<TuongDong> checkTuongDong(String s) {
		List<TuongDong> listTuongDong=new ArrayList<TuongDong>();
		String[] list=s.split(" ");
		for(CauHoi c:listCauHoi) {
			int dem=0;
			for (int i = 0; i < list.length; i++) {
				if(c.getCauHoi().contains(list[i])) dem++; 
			}
			listTuongDong.add(new TuongDong(c.getId(),dem));
		}
		Collections.sort(listTuongDong);
		if(listTuongDong.size()<=5) return listTuongDong;
		List<TuongDong> kq=new ArrayList<TuongDong>();
		for (int i = 0; i < 5; i++) {
			kq.add(listTuongDong.get(i));
		}
		return kq;	
	}
}
